---
import Modal from "@layouts/Modal.astro";
import type { FilterModalFilterData } from "@lib/models/filter-data";
import { getAllCategories } from "@lib/services/deal";
import { t } from "@lib/services/i18n";
import { getFilterModalFilterData } from "@lib/services/user";

export const partial = true;

const { language, user, basicUser } = Astro.locals;
const categories = await getAllCategories();
const perimeterText = t("perimeter", language);
const filterData: FilterModalFilterData = user.id
	? await getFilterModalFilterData(user.id)
	: { searchRadius: basicUser.searchRadius, selectedCategoryIds: basicUser.selectedCategories };
---

<Modal>
	<h1>{t("filter", language)}</h1>
	<form
		hx-post="/api/accounts/update-filter"
		hx-target="#modal"
		x-data={`{
			categories: [${categories.map((cat) => JSON.stringify(cat))}],
			selectedCategoryIds: [${filterData?.selectedCategoryIds}],
			allCategoryIds: [${categories.map((cat) => cat.id)}]
		}`}>
		<div class="form-control">
			<label id="radius-label" for="radius" class="flex items-center gap-1"></label>
			<input
				id="radius"
				type="range"
				name="searchRadius"
				min="500"
				max="25000"
				step="500"
				value={filterData?.searchRadius}
				oninput="changeRadius(this)"
			/>
		</div>
		<hr class="my-4" />
		<div class="grid grid-cols-2 gap-2 py-4">
			<button type="button" class="btn-primary btn-sm" @click="selectedCategoryIds = allCategoryIds">
				{t("select_all", language)}
			</button>
			<button type="button" class="btn-primary btn-sm" @click="selectedCategoryIds = []">
				{t("deselect_all", language)}
			</button>
		</div>
		<div id="category-list" class="flex flex-col gap-2">
			<template x-for="category in categories">
				<div class="form-control-horizontal">
					<input
						type="checkbox"
						:id="category.name"
						class="checkbox"
						name="selectedCategoryIds"
						:value="category.id"
						:checked="selectedCategoryIds.includes(category.id)"
						oninput="changeSelectedCategories(this)"
					/>
					<label :for="category.name" x-text="category.name"></label>
				</div>
			</template>
		</div>
		<div class="modal-action">
			<button class="btn-primary" hx-delete="/api/ui/remove" hx-target="#modal">
				{t("cancel", language)}
			</button>
			<button>{t("save", language)}</button>
		</div>
	</form>
</Modal>

<script
	is:inline
	define:vars={{
		searchRadius: filterData?.searchRadius,
		selectedCategoryIds: filterData?.selectedCategoryIds,
		perimeterText,
	}}
>
	FilterService.searchRadius = searchRadius;
	FilterService.selectedCategories = selectedCategoryIds;

	const searchRadiusLabel = document.getElementById("radius-label");
	searchRadiusLabel.textContent = `${perimeterText} ${(searchRadius * 2) / 1000} km`;

	document.changeRadius = function (element) {
		const newSearchRadius = +element.value;
		FilterService.searchRadius = newSearchRadius;
		searchRadiusLabel.textContent = `${perimeterText} ${(newSearchRadius * 2) / 1000} km`;
	};

	document.changeSelectedCategories = function (element) {
		FilterService.toggleSelectedCategory(+element.value);
	};
</script>
