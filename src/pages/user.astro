---
import BookmarkBoxedIcon from "@components/icons/BookmarkBoxedIcon.astro";
import DealsIcon from "@components/icons/DealsIcon.astro";
import HeartIcon from "@components/icons/HeartIcon.astro";
import UserHeader from "@components/ui/user/UserHeader.astro";
import Layout from "@layouts/Layout.astro";
import { getUsernameById } from "@lib/services/account";

const user = Astro.locals.user;
const username = user.isProUser ? await getUsernameById(user.id) : "Basic";
const useLocationService = false;
const currentLocation = { lat: 48.137154, lon: 11.576124 };
---

<Layout showBadge={true}>
  <UserHeader {username} userId={user.id} lang={user.language} />
  <div x-data="{selectedTab: 0}">
    <div class="tabs tabs-bordered" x-cloak>
      <div
        hx-get="/partials/deals/active"
        hx-target="#content"
        hx-trigger="click, load"
        class="tab"
        :class="selectedTab === 0 ? 'tab-active' : ''"
        @click="selectedTab = 0">
        <div x-show="selectedTab === 0">
          <DealsIcon class="h-8 pb-2" />
        </div>
        <div x-show="selectedTab !== 0">
          <DealsIcon class="h-8 pb-2" outline={true} />
        </div>
      </div>
      <div
        hx-get="/dealer-favorites-list"
        hx-target="#content"
        hx-trigger="click"
        class="tab"
        :class="selectedTab === 1 ? 'tab-active' : ''"
        @click="selectedTab = 1">
        <div x-show="selectedTab === 1">
          <HeartIcon class="h-8 pb-2" />
        </div>
        <div x-show="selectedTab !== 1">
          <HeartIcon class="h-8 pb-2" outline={true} />
        </div>
      </div>
      <div
        hx-get="/deal-favorites-list"
        hx-target="#content"
        hx-trigger="click"
        class="tab"
        :class="selectedTab === 2 ? 'tab-active' : ''"
        @click="selectedTab = 2">
        <div x-show="selectedTab === 2">
          <BookmarkBoxedIcon class="h-8 pb-2" outline={false} />
        </div>
        <div x-show="selectedTab !== 2">
          <BookmarkBoxedIcon class="h-8 pb-2" outline={true} />
        </div>
      </div>
    </div>
    <div id="content" class="pt-1"></div>
  </div>
</Layout>

<script is:inline define:vars={{ useLocationService, currentLocation }}>
  const streetLabel = document.getElementById("street");
  const cityLabel = document.getElementById("city");
  LocationService.addChangeHandler((_, address) => setAddressLabels(address));

  LocationService.location = {
    lat: currentLocation.Lat,
    lon: currentLocation.Lon,
  };

  if (useLocationService) {
    LocationService.startLocationWatcher();
  }

  function setAddressLabels(address) {
    if (!address || address.length == 0) {
      return;
    }

    const addressTokens = address.split(",");
    streetLabel.textContent = addressTokens[0];
    cityLabel.textContent = addressTokens[1];
  }
</script>
