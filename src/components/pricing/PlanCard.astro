---
import { t } from "@lib/services/i18n";
import { hasActiveSubscription } from "@lib/services/subscription";

interface Props {
	title: string;
	price: string;
	planId: number;
}

const { title, price, planId } = Astro.props;
const { user, language } = Astro.locals;
const hasActiveSub = await hasActiveSubscription(user.id || "");
---

<div class="text-100 card w-full bg-neutral shadow-xl">
	<div class="card-body gap-6">
		<span class="card-title w-full justify-between">
			<span>{title}</span>
			<span class="text-sm">{price}</span>
		</span>
		<slot />
		<div class="card-actions justify-end">
			{
				hasActiveSub ? (
					<span>{t("active_subscription_already_exists", language)}</span>
				) : (
					<a
						href="#"
						class="paddle_button"
						data-display-mode="overlay"
						data-theme="light"
						data-locale="en"
						data-items='[
				{
					"priceId": "pri_01jc99z8gnf48j2tvxqbm7gg99",
					"quantity": 1
				}
			]'>
						Paddle
					</a>
				)
			}
		</div>
	</div>
</div>
<script src="https://cdn.paddle.com/paddle/v2/paddle.js" is:inline></script>
<script is:inline>
	Paddle.Initialize({ token: "test_6fc960e5ae4a150bc047546254e" });
</script>
