---
import DefaultUserProfileImage from "@components/icons/DefaultUserProfileImage.astro";
import FilterIcon from "@components/icons/FilterIcon.astro";
import LocationIcon from "@components/icons/LocationIcon.astro";
import { getLocation, getUsernameById } from "@lib/services/account";
import { Point } from "@lib/services/geo";
import { t } from "@lib/services/i18n";
import DealsCountBadge from "./DealsCountBadge.astro";
import FavoriteDealersCountBadge from "./FavoriteDealersCountBadge.astro";
import FavoriteDealsCountBadge from "./FavoriteDealsCountBadge.astro";

const { id, language } = Astro.locals.user;
const username = id ? await getUsernameById(id) : t("basic", language);
const useLocationService = false;
const currentLocation = id ? await getLocation(id) : Point.centerOfGermany();
---

<div class="flex h-52 justify-between">
	<div class="flex w-full justify-between">
		<div class="m-4 flex flex-col gap-4">
			<div class="flex gap-2 fill-current text-xs text-[#69828c]">
				<DealsCountBadge />
				<FavoriteDealersCountBadge />
				<FavoriteDealsCountBadge />
			</div>
			<div class="text-2xl">{username || "Basic"}</div>
			<div class="flex flex-col gap-2 text-sm">
				<div class="font-extrabold">{t("your_location", language)}</div>
				<div class="flex gap-2">
					<LocationIcon class="h-7" />
					<div class="flex flex-col text-xs">
						<div id="street">Suche aktuelle Position ...</div>
						<div id="city"></div>
					</div>
				</div>
			</div>
		</div>
		<div class="flex flex-col gap-8">
			<div class="avatar z-40 -mt-6 mr-16 cursor-pointer">
				<div class="h-24 w-24 rounded-full bg-base-100 ring-2 ring-[#556368]">
					<div
						id="account-profile-image"
						hx-get="/partials/account/profile-image"
						hx-target="this"
						hx-swap="outerHTML"
						hx-trigger="load once">
						<DefaultUserProfileImage />
					</div>
				</div>
			</div>
			<button
				class="btn-circle btn-primary flex w-20 justify-start self-end rounded-l-full rounded-r-none px-0.5"
				hx-get="/partials/map/filter-modal?redirect-after-save=/user"
				hx-target="#modal">
				<FilterIcon class="h-11 w-auto rounded-full border border-white p-1" />
			</button>
		</div>
	</div>
</div>
<script is:inline define:vars={{ useLocationService, currentLocation }}>
	const streetLabel = document.getElementById("street");
	const cityLabel = document.getElementById("city");
	LocationService.addChangeHandler((_, address) => setAddressLabels(address));

	LocationService.location = {
		lat: currentLocation.lat,
		lon: currentLocation.lon,
	};

	if (useLocationService) {
		LocationService.startLocationWatcher();
	}

	function setAddressLabels(address) {
		if (!address || address.length == 0) {
			return;
		}

		console.log("set address:", address);

		const addressTokens = address.split(",");
		streetLabel.textContent = addressTokens[0];
		cityLabel.textContent = addressTokens[1];
	}
</script>
